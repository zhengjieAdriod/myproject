
1，滚动兼容问题
    http://www.cnblogs.com/xxcanghai/p/5015712.html

2，自定义标签，传递参数
    这两天学着写了个 Django 的 tag，这个 tag 叫做 "post_detail_tag", 调用的代码像这样：
    {% post_detail_tag post.id current_post_id %}
    其中后面两个都是传递的变量。

3, 使用ajax 的post  请求无法走到视图函数????  什么原因
    http://code.ziqiangxuetang.com/django/django-csrf.html
4,跳转到静态页面的方式:
    <a href="{% url 'order:manager-url' %}" data-hover="">管家入口</a>

5,定位用户点击的是哪个标签:
         $(".order").click(function () {
                index = $(this).parents(".ch").index()
            });
6, tab页的切换 刷新
        http://blog.csdn.net/u011085172/article/details/70917475
7, form 表单
    记住, 请求的表单展示的视图函数  与  提交时的视图函数  是同一个函数,  如此才能渲染成input 标签

    # todo 有了第二个参数 instance = service , 便是对原来数据的更新,而不是添加新的数据.http://www.cnblogs.com/stefan-liu/p/5547936.html
        # form = ServiceForm(request.POST)
        form = ServiceForm(request.POST, instance=service)


8, django视图函数的数据，要序列化之后  才能传递给js代码使用
    'service': json.dumps(service_serializer.data),
    不但将service 对象序列化了, 并且将他的worker字段也序列化了


9,表单数据初始化：
    http://www.jianshu.com/p/5664dd79c0ba
10, 预览本地上传的图片
    http://www.cnblogs.com/xiongzaiqiren/p/6495240.html
11, 重定向方式
    # 重定向到 worker 的服务列表页，实际上当 redirect 函数接收一个模型的实例时，它会调用这个模型实例的 get_absolute_url 方法，
            # 然后重定向到 get_absolute_url 方法返回的 URL。
            # return redirect(worker)  # todo 第一种重定向方式
            # todo 第二种重定向方式
            return redirect(reverse('worker_manage:manager-url', kwargs={'worker_pk': worker_pk}))

12, 列表排序
        services = worker.service_set.all()
        services = sorted(services, key=lambda service: service.pk, reverse=True)
13 ， 表单学习
        http://blog.csdn.net/qq_14898613/article/details/61617007


14, 同时提交多个表单：
        https://segmentfault.com/a/1190000007183873